{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","components/TaskCreator/TaskCreator.js","components/TaskCreator/TaskCreatorContainer.js","store/action-creators.js","store/actions.js","components/Task/Task.js","components/Task/TaskContainer.js","components/TasksList/TasksList.js","store/selectors.js","components/TasksList/TasksListContainer.js","components/Footer/Footer.js","components/Footer/FooterContainer.js","App.js","store/initial-state.js","store/store.js","store/reducers/task-reducer.js","index.js"],"names":["Header","className","TaskCreator","createTask","useState","textTask","setTextTask","placeholder","value","onChange","e","currentTarget","type","onClick","preventDefault","id","Date","getTime","connect","text","Task","completed","deleteTask","toggleStatusTask","TasksList","filteredTasks","map","t","TaskContainer","key","getFilteredTasks","createSelector","state","tasks","visibilityFilter","filter","getCountTasks","length","Footer","count","setVisibilityFilter","App","TaskCreatorContainer","TasksListContainer","FooterContainer","initialState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dd3e134.chunk.js","sourcesContent":["import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\nimport \"./Header.scss\";\n\nconst Header = () => {\n\n    return (\n        <div className=\"header\">\n            <h1 className=\"header__title\">To do list</h1>\n        </div>\n    );\n};\n\nexport default Header;","import React, { useState } from 'react';\nimport './TaskCreator.scss';\n\nconst TaskCreator = ({createTask}) => {\n\n  let [textTask, setTextTask] = useState(\"\");\n\n  const typeText = (e) => {\n      setTextTask(e.currentTarget.value);\n  }\n\n  const handleCreateTask = (e) => {\n    e.preventDefault();\n    if(textTask){\n      const id = new Date().getTime();\n      createTask(id, textTask);\n      setTextTask(\"\");\n    }\n  }\n        return (\n            <form className=\"form\">\n                <input className=\"form__input\" placeholder=\"add a new task\" value={textTask} onChange={typeText}/>\n                <button className=\"form__button\" type=\"submit\" onClick={handleCreateTask}>add</button>\n            </form>\n        );\n};\n\nexport default TaskCreator;","import {createTask} from '../../store/action-creators';\nimport { connect } from 'react-redux';\nimport TaskCreator from './TaskCreator';\n\n\nexport default connect(null, {createTask})(TaskCreator);","import {CREATE_TASK, DELETE_TASK, TOGGLE_STATUS_TASK, SET_VISIBILITY_FILTER} from './actions';\r\n\r\nexport const createTask = (id, text) => ({\r\n  type: CREATE_TASK,\r\n  id,\r\n  text\r\n});\r\n\r\nexport const deleteTask = (id) => ({\r\n  type: DELETE_TASK,\r\n  id\r\n});\r\n\r\nexport const toggleStatusTask = (id, completed) => ({\r\n  type: TOGGLE_STATUS_TASK,\r\n  completed,\r\n  id \r\n});\r\n\r\nexport const setVisibilityFilter = (filter) => ({\r\n  type: SET_VISIBILITY_FILTER,\r\n  filter  \r\n});","export const CREATE_TASK = \"CREATE_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const TOGGLE_STATUS_TASK = \"TOGGLE_STATUS_TASK\";\r\nexport const SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\r\n\r\nexport const SHOW_ALL = \"SHOW_ALL\";\r\nexport const SHOW_ACTIVE = \"SHOW_ACTIVE\";\r\nexport const SHOW_COMPLETED = \"SHOW_COMPLETED\";","import React from 'react';\nimport './Task.scss';\n\nconst Task = ({id, text, completed, deleteTask, toggleStatusTask}) => {\n\n    return (\n        <div onClick={()=>{toggleStatusTask(id, completed);}} className={`task`}>\n            <span className={`task__text ${completed ? \"completed\" : \"\"}`}>{text}</span>\n            <button className=\"task__btn\" onClick={()=>{deleteTask(id)}}>x</button>\n        </div>\n    );\n};\n\nexport default Task;","import {deleteTask, toggleStatusTask} from '../../store/action-creators';\nimport { connect } from 'react-redux';\nimport Task from './Task';\n\n\n\nexport default connect(null,{deleteTask, toggleStatusTask})(Task);","import React from 'react';\nimport './TasksList.scss'\nimport TaskContainer from '../Task/TaskContainer';\n\nconst TasksList = ({filteredTasks}) => {\n\n  return(<div className=\"tasks-list\"> \n    { filteredTasks.map(t=>(<TaskContainer key={t.id}  id={t.id} text={t.text} completed={t.completed}/>)) }\n    </div>);\n};\n\nexport default TasksList;","import { createSelector } from \"reselect\";\r\n\r\nexport const getTasks = (state) => {\r\n  return state.tasks;\r\n} \r\n\r\nexport const getVisibilityFilter = (state) => {\r\n  return state.visibilityFilter;\r\n} \r\n\r\nexport const getFilteredTasks = createSelector(getTasks, getVisibilityFilter, (tasks, visibilityFilter) => {\r\n\r\n  if(visibilityFilter === \"SHOW_ACTIVE\"){\r\n    return tasks.filter(t => !t.completed);\r\n  } else if(visibilityFilter === \"SHOW_COMPLETED\"){\r\n    return tasks.filter(t => t.completed);\r\n  } else {\r\n    return tasks;\r\n  }\r\n}); \r\n\r\nexport const getCountTasks = (state) => {\r\n\r\n  return getFilteredTasks(state).length;\r\n}; \r\n","import TasksList from './TasksList';\nimport { connect } from 'react-redux';\nimport { getFilteredTasks } from '../../store/selectors';\n\nconst mapStateToProps = (state) => {\n  return {\n    filteredTasks: getFilteredTasks(state)\n  };\n};\n\n\nexport default connect(mapStateToProps)(TasksList);","import React from 'react';\nimport './Footer.scss'\nimport {SHOW_ALL, SHOW_ACTIVE, SHOW_COMPLETED} from '../../store/actions';\n\n\nconst Footer = ({count, setVisibilityFilter}) => {\n\n  const setFilterALL = () =>{\n    setVisibilityFilter(SHOW_ALL);\n  };\n  const setFilterActive = () =>{\n    setVisibilityFilter(SHOW_ACTIVE);\n  };\n  const setFilterCompleted = () =>{\n    setVisibilityFilter(SHOW_COMPLETED);\n  };  \n\n  return(<div className=\"footer\">\n      <div className=\"footer__count\">\n        <span>Count: {count}</span>\n      </div>\n      <div className=\"filters\">\n        <button className=\"filters__btn filters__btn_first\" onClick={setFilterALL}>All</button>\n        <button className=\"filters__btn\" onClick={setFilterActive}>Active</button>\n        <button className=\"filters__btn filters__btn_last\" onClick={setFilterCompleted}>Completed</button>\n      </div>\n    </div>);\n};\n\nexport default Footer;","import Footer from './Footer';\nimport { connect } from 'react-redux';\nimport {setVisibilityFilter} from '../../store/action-creators';\nimport { getCountTasks } from '../../store/selectors';\n\n\nconst mapStateToProps = (state) => {\n  return {\n    count: getCountTasks(state)\n  };\n};\n\nexport default connect(mapStateToProps, {setVisibilityFilter})(Footer);","import React from 'react';\nimport Header from './components/Header';\nimport TaskCreatorContainer from './components/TaskCreator/TaskCreatorContainer';\nimport TasksListContainer from './components/TasksList/TasksListContainer';\nimport FooterContainer from './components/Footer/FooterContainer';\nimport \"./App.scss\";\n\nconst App = () => {\n\n    return (\n        <div className=\"app-wrapper\">\n            <div className=\"app\">\n                <Header/>\n                <TaskCreatorContainer/>\n                <TasksListContainer/>\n                <FooterContainer/>\n            </div>\n        </div>\n    );\n};\n\nexport default App;","import {SHOW_ALL } from './actions';\r\n\r\nexport let initialState = {\r\n  tasks: [{\r\n      id: 0,\r\n      text: \"learn React\",\r\n      completed: false\r\n    },\r\n    {\r\n      id: 1,\r\n      text: \"learn Redux\",\r\n      completed: false\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"learn React Native\",\r\n      completed: true\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"learn TypeScript\",\r\n      completed: false\r\n    }\r\n  ], \r\n  visibilityFilter: SHOW_ALL\r\n};\r\n","import {createStore} from \"redux\";\r\nimport {taskReducer} from './reducers/task-reducer';\r\nimport {initialState} from './initial-state';\r\n\r\nexport const store = createStore(taskReducer, initialState);","import {CREATE_TASK, DELETE_TASK, TOGGLE_STATUS_TASK, SET_VISIBILITY_FILTER,} from '../actions'\r\nimport {initialState} from '../initial-state';\r\n\r\nexport const taskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: [{\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }, ...state.tasks]\r\n      }\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((t)=>{return t.id !== action.id})\r\n      }\r\n    case TOGGLE_STATUS_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((t)=>{\r\n          if(t.id===action.id){\r\n            t.completed = !t.completed;\r\n          }\r\n          return t;\r\n        })\r\n      }\r\n    case SET_VISIBILITY_FILTER:\r\n      return {\r\n        ...state,\r\n        visibilityFilter: action.filter\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store} from './store/store';\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}